parameters:
  operating_system: "" # Windows|Linux
  enable_code_coverage: "" # True|False

  configuration: ""
  agent_pool: ""

  # These are parameters not because they will be configued by the caller, but rather because arrays can be
  # defined here and not in variables.
  test_types:
    "UnitTests": " $(azure_code_coverage_arg)"
    "FunctionalTests": ""
    "IntegrationTests": ""
    "SystemTests": ""
    "LocalEndToEndTests": ""
    # 'EndToEndTests': ''
    # 'BuildVerificationTests': ''
    # 'PerformanceTests: ''

stages:
  - stage: BuildAndTest_${{ parameters.operating_system }}_${{ parameters.configuration}}_Stage
    displayName: "${{ parameters.operating_system }} - ${{ parameters.configuration }}: "
    dependsOn: [] # No dependencies

    jobs:
      - job: BuildAndTest_${{ parameters.operating_system }}_${{ parameters.configuration}}_Job

        # In the UX, this display name contains redundant info (the OS and config appear twice). However, it
        # needs to be here to ensure that the information appears in the status email messages.
        displayName: "Build and Test (${{ parameters.operating_system }} - ${{ parameters.configuration }})"
        pool:
          vmImage: "${{ parameters.agent_pool }}"
        workspace:
          clean: all

        steps:
          - template: Initialize.steps_template.yaml
            parameters:
              operating_system: ${{ parameters.operating_system }}
              enable_code_coverage: ${{ parameters.enable_code_coverage }}

          - script: |-
              echo "configuration - ${{ parameters.configuration }}"
              echo "agent_pool - ${{ parameters.agent_pool }}"
            displayName: "[DEBUG] Display BuildAndTest Variables"

          - script: |-
              $(azure_display_all_environment_vars)
            displayName: "[DEBUG] Environment Variables (Before Activation)"

          - script: |-
              $(azure_bootstrap_command) $(azure_agent_temp_directory) /verbose
            displayName: "<Bootstrap>"
            timeoutInMinutes: 180

          - script: |-
              $(azure_activate_script) ${{ parameters.configuration }} && $(azure_display_all_environment_vars)
            displayName: "[DEBUG] Environment Variables (After Activation)"

          # TODO: Code formatting

          - script: |-
              $(azure_activate_script) ${{ parameters.configuration }} && Builder$(azure_script_extension) Execute . "$(azure_artifacts_directory)/Builder" /verbose
            displayName: "<Builder>"
            timeoutInMinutes: 180

          - script: |-
              $(azure_activate_script) ${{ parameters.configuration }} && Tester$(azure_script_extension) MatchAllTests . UnitTests /verbose
            displayName: "<Tester (MatchAllTests) - UnitTests>"
            timeoutInMinutes: 1800
            condition: succeededOrFailed()

          - ${{ each test_type in parameters.test_types }}:
              - script: |-
                  $(azure_activate_script) ${{ parameters.configuration }} && Tester$(azure_script_extension) TestAll . "$(azure_artifacts_directory)/Tester/${{ test_type.key }}" ${{ test_type.key }} ${{ test_type.value }} /verbose
                displayName: "<Tester - ${{ test_type.key }}>"
                timeoutInMinutes: 180
                condition: succeededOrFailed()

          - task: PublishPipelineArtifact@0
            displayName: "Publish Artifacts"
            inputs:
              targetPath: $(azure_artifacts_directory)
              artifactName: "${{ parameters.operating_system }} - ${{ parameters.configuration }}"
            condition: succeededOrFailed()
            timeoutInMinutes: 180
